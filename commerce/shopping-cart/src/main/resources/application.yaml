server:
  port: 0
spring:
  application:
    name: shopping-cart
  config:
    import: "configserver:"
  cloud:
    config:
      discovery:
        enabled: true
        service-id: config-server
      fail-fast: true
      retry:
        use-random-policy: true
        max-interval: 6000
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: postgres
  jpa:
    hibernate:
      default_schema: shopping_cart

eureka:
  client:
    service-url:
      defaultZone: http://${eureka.instance.hostname:localhost}:${eureka.instance.port:8761}/eureka/

# Circuit Breaker конфигурация для warehouse сервиса
resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 50
        failureRateThreshold: 50
        waitDurationInOpenState: 10000 # 10 секунд в миллисекундах
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowType: COUNT_BASED
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
    instances:
      warehouse:
        slidingWindowSize: 10
        failureRateThreshold: 60
        waitDurationInOpenState: 15000 # 15 секунд для warehouse (редкие вызовы)
        permittedNumberOfCallsInHalfOpenState: 2
        slidingWindowType: COUNT_BASED
        minimumNumberOfCalls: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        recordExceptions:
          - java.net.ConnectException
          - java.net.SocketTimeoutException
          - java.io.IOException
          - org.springframework.web.client.ResourceAccessException
          - feign.FeignException